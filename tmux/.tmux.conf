#
# | |_ _ __ _  ___ __
# |  _| '  \ || \ \ /
#  \__|_|_|_\_,_/_\_\
#
#  Borrowed ideas from http://dotshare.it/dots/86

#-------~---~----------~----------~----
# Key Bindings
#-------~---~----------~----------~----
unbind C-b
set -g prefix C-a
setw -g mode-keys vi
#set -g mode-mouse on

# Unbinds
# `-> these are part of the default mappings
#     and will get new functionality
unbind c
unbind i
unbind l
unbind s
unbind w

bind ^F12 source-file ~/.tmux.conf
bind w neww
bind m choose-window
bind a choose-session
bind x kill-pane
bind t set status

bind c new-window -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind '%' split-window -h -c "#{pane_current_path}"

# Alternative mnemonics for splits
bind-key - split-window -v
bind-key _ split-window -v
bind-key | split-window -h

bind C-h resize-pane -L 5
bind C-j resize-pane -D 5
bind C-k resize-pane -U 5
bind C-l resize-pane -R 5

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

#-------~---~----------~----------~----
# Windows / Panes
#-------~---~----------~----------~----
#setw -g mouse-select-window on
#setw -g mouse-select-pane on
set -g mouse on
set -g mouse-utf8 on
set -g pane-active-border-fg blue
set -g display-panes-colour white
set -g display-panes-active-colour blue
set -g display-panes-time 1000

setw -g automatic-rename on
setw -g monitor-activity on
setw -g utf8 on
set -g history-limit 9000

#-------~---~----------~----------~----
# Misc
#-------~---~----------~----------~----
set -g default-terminal "screen-256color"
set -g default-shell /bin/zsh
set -g default-command "reattach-to-user-namespace -l zsh"
set -g set-titles on
set -g set-titles-string 'tmux: #T'
set -g repeat-time 100
setw -g clock-mode-colour blue
setw -g clock-mode-style 12
setw -g alternate-screen on
set -sg escape-time 0


#-------~---~----------~----------~----
# Copy/Paste
#-------~---~----------~----------~----
bind -t vi-copy v begin-selection
#bind -t vi-copy y copy-pipe "xclip -selection c"
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind -t vi-copy y copy-selection
bind-key -t vi-copy Enter copy-selection
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#bind-key -t vi-copy Enter copy-pipe "xclip -selection c"


#-------~---~----------~----------~----
# Status Bar
#-------~---~----------~----------~----
set -g message-attr bold
set -g message-fg black
set -g message-bg black

set -g status-justify right
set -g status-bg black
set -g status-fg white
set -g status-interval 5
set -g status-utf8 on

setw -g window-status-current-fg blue
setw -g window-status-current-attr none
#setw -g window-status-alert-attr bright
setw -g window-status-format '#[fg=white]#I-#W#F'
setw -g window-status-current-format '#[fg=blue] #I-#W#F '

set -g status-left '#[fg=magenta] #S#[fg=white]:#P #[fg=blue] #H #[fg=black,bold] > #T'
set -g status-left-length 200
set -g status-left-fg black

set -g status-right '#(cat /proc/loadavg | cut -d\\  -f-3) #[fg=black,bold]| %H:%M '


#-------~---~----------~----------~----
# Vim Integration
#-------~---~----------~----------~----
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
